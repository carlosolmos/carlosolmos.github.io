<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>everactive API on brain dump</title>
    <link>https://carlosolmos.dev/series/everactive-api/</link>
    <description>Recent content in everactive API on brain dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Nov 2022 19:01:59 -0800</lastBuildDate><atom:link href="https://carlosolmos.dev/series/everactive-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node-RED and the Everactive API - Part 1</title>
      <link>https://carlosolmos.dev/posts/node-red-and-the-everactive-api-part-1/</link>
      <pubDate>Tue, 22 Nov 2022 19:01:59 -0800</pubDate>
      
      <guid>https://carlosolmos.dev/posts/node-red-and-the-everactive-api-part-1/</guid>
      <description>Node-RED is a great tool for low-code IoT programming. Its drag &amp;amp; drop interface allows you to wire hardware and software to get data flowing in no time. It&amp;rsquo;s open source and there is plenty of documentation and helpful resources around. In this article -the first of two parts- we are going to create a very simple workflow to fetch data from the Everactive API, and a public data service, and then apply a very simple thresholding function.</description>
    </item>
    
    <item>
      <title>Everactive Edge Webhooks, Fluentd, and S3</title>
      <link>https://carlosolmos.dev/posts/everactive-edge-webhooks-fluentd-and-s3/</link>
      <pubDate>Tue, 01 Nov 2022 20:22:46 -0700</pubDate>
      
      <guid>https://carlosolmos.dev/posts/everactive-edge-webhooks-fluentd-and-s3/</guid>
      <description>From Everactive&amp;rsquo;s Webhook Subscriptions to Fluentd &amp;amp; S3 ðŸ”— Disclaimer: this solution is totally overengineered. Only for learning purposes. You don&amp;rsquo;t want to use this in production, or do you?&amp;hellip;ðŸ˜œ
 Everactiveâ€™s Managed Network ensures connectivity, uptime, and reliable &amp;amp; secure data transfer into our Platform. We understand that you need a steady stream of new data to transform into high-value insights to package as innovative, hyper-scale IoT applications to your end users.</description>
    </item>
    
    <item>
      <title>Everactive Edge API and Pipedream</title>
      <link>https://carlosolmos.dev/posts/everactive-edge-api-and-pipedream/</link>
      <pubDate>Sun, 09 Oct 2022 20:22:46 -0700</pubDate>
      
      <guid>https://carlosolmos.dev/posts/everactive-edge-api-and-pipedream/</guid>
      <description>The Everactive Edge RESTful API gives you direct programmatic access to the data returned by Eversensors. The API provides endpoints to retrieve data based on time ranges, and shortcuts to get the last-available reading from a particular sensor. Typically, applications will poll these endpoints to get the most up-to-date information. In this article, we are going to use Pipedream.com as a mechanism to periodically poll the API for new data and log it in a spreadsheet on Google Docs.</description>
    </item>
    
  </channel>
</rss>
